{"version":3,"sources":["ServerCall.js","reducers/todo.js","store.js","components/TodoItem.js","components/TodoList.js","components/TodoDetail.js","state.js","App.js","index.js"],"names":["url","getTasksServer","fetch","method","then","response","json","postTaskServer","newTask","headers","content-type","body","JSON","stringify","updateTaskServer","_ref","_id","rest","Object","objectWithoutProperties","console","log","concat","status","deleteTaskServer","task","initState","todos","id","title","activeTodo","undefined","createStore","state","action","type","objectSpread2","TodoItem","item","onSelect","onDelete","onComplete","react_default","a","createElement","className","onClick","TodoList","items","onAdd","value","map","components_TodoItem","key","TodoDetail","active","onUpdateTask","onChange","event","target","addTaskItem","_x","_addTaskItem","apply","this","arguments","_callee","nextItems","regenerator_default","wrap","_context","prev","next","sent","abrupt","stop","App","_useState","useState","_useState2","slicedToArray","setItems","_useState3","_useState4","activeItem","setActiveItem","store","getState","_addTask","asyncToGenerator","mark","deleteTask","filter","i","deleteTaskItem","useEffect","tasks","components_TodoList","components_TodoDetail","copyOfItem","findIndex","obj","updateTaskItem","find","completeTaskItem","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.583679c3.chunk.js","sourcesContent":["const url = \"https://crudcrud.com/api/11e0909725cb47649bd825a5a6f7fa0e/tasks\";\r\n\r\nexport const getTasksServer = () => {\r\n  return fetch(url, {\r\n    method: \"GET\"\r\n  }).then(response => response.json());\r\n};\r\n\r\nexport const getTaskServer = task => {\r\n  return fetch(`${url}/${task._id}`, {\r\n    method: \"GET\"\r\n  }).then(response => response.json());\r\n};\r\n\r\nexport const postTaskServer = newTask => {\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(newTask)\r\n  }).then(response => response.json());\r\n};\r\n\r\nexport const updateTaskServer = ({ _id, ...rest }) => {\r\n  console.log('update function start')\r\n  return fetch(`${url}/${_id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(rest)\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      console.log(\"error updating\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteTaskServer = task => {\r\n  return fetch(`${url}/${task._id}`, {\r\n    method: \"DELETE\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(task)\r\n  });\r\n  // .then(console.log(\"deleted\"));\r\n};\r\n","import {\r\n    getTasksServer,\r\n    postTaskServer,\r\n    updateTaskServer,\r\n    deleteTaskServer,\r\n    getTaskServer\r\n  } from \"../ServerCall\";\r\n\r\nconst initState = {\r\n    todos: [\r\n        {id: 1, \r\n        title: \"New task...\",\r\n        status: \"new\",\r\n        body: \"Add notes...\"}\r\n    ],\r\n    //getTasksServer().then(tasks\r\n    activeTodo: this.todos[0]\r\n}\r\n\r\nconst newTask = () => {\r\n    return {\r\n      title: \"New task...\",\r\n      status: \"new\",\r\n      body: \"Add notes...\"\r\n    };\r\n  };\r\n\r\nconst TODO_ADD = 'TODO_ADD';\r\nconst TODO_UPDATE = 'TODO_UPDATE';\r\nconst TODO_DELETE = 'TODO_DELETE';\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type){\r\n        case TODO_ADD:\r\n            return {...state}\r\n            // const nextItems = await postTaskServer(newTask()).then(item => [...items, item]);\r\n            // return nextItems;\r\n        case TODO_UPDATE:\r\n            // let copyOfItem = { ...item };\r\n            // if (action.title !== undefined) {\r\n            //   copyOfItem.title = title;\r\n            // }\r\n            // if (body !== undefined) {\r\n            //   copyOfItem.body = body;\r\n            // }\r\n            // items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\r\n            // updateTaskServer(copyOfItem);\r\n            // return [...items];\r\n            return state\r\n        case TODO_DELETE:\r\n            return state;\r\n        default:\r\n            return state;\r\n    };\r\n}","import {createStore} from 'redux'\r\nimport reducer from './reducers/todo'\r\n\r\nexport default createStore(reducer);","import React from \"react\";\n\nconst TodoItem = ({ item, onSelect, onDelete, onComplete }) => {\n  if (item.status === \"new\") {\n    return (\n      <li>\n        <button className=\"button task-button\" onClick={() => onSelect(item)}>\n          {item.title}\n        </button>\n        <button\n          className=\"button button-small button-delete\"\n          onClick={() => onDelete(item)}\n        >\n          X\n        </button>\n      </li>\n    );\n  } else {\n    return (\n      <li>\n        <button className=\"button task-button\" onClick={() => onSelect(item)}>\n          {item.title}\n        </button>\n        <button className=\"button button-small button-complete\">âœ”</button>\n      </li>\n    );\n  }\n};\n\nexport default TodoItem;\n","import React from \"react\";\r\n\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst TodoList = ({ items, onAdd, onSelect, onDelete, onComplete }) => {\r\n  return (\r\n    <div className=\"app-column\">\r\n      <div className=\"header app-header\">\r\n        <div className=\"app-title\">To-Do App</div>\r\n        <button\r\n          className=\"button button-medium button-add\"\r\n          value=\"Add\"\r\n          onClick={() => onAdd()}\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n      <div className=\"task-list\">\r\n        <ul>\r\n          {items &&\r\n            items.map(item => (\r\n              <TodoItem\r\n                key = {item._id}\r\n                item={item !== undefined && item}\r\n                onSelect={onSelect}\r\n                onDelete={onDelete}\r\n                onComplete={onComplete}\r\n              />\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoList;\r\n","import React from \"react\";\r\n\r\nconst TodoDetail = ({ active, onUpdateTask, onComplete, onDelete }) => {\r\n  return (\r\n    <div className=\"app-column\">\r\n      <div className=\"header task-header\">\r\n        <input\r\n          className=\"title-input\"\r\n          type=\"text\"\r\n          value={active ? active.title : \"\"}\r\n          onChange={event => onUpdateTask(active, event.target.value)}\r\n        />\r\n        <button\r\n          className=\"button button-large button-complete\"\r\n          onClick={() => onComplete(active)}\r\n        >\r\n          Complete\r\n        </button>{\" \"}\r\n        <button\r\n          className=\"button button-large button-delete\"\r\n          onClick={() => onDelete(active)}\r\n        >\r\n          Remove\r\n        </button>{\" \"}\r\n      </div>\r\n      <div className=\"task-body\">\r\n        <textarea\r\n          className=\"body-text\"\r\n          type=\"text\"\r\n          value={active ? active.body : \"\"}\r\n          onChange={event =>\r\n            onUpdateTask(active, undefined, event.target.value)\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoDetail;\r\n","import {\r\n    getTasksServer,\r\n    postTaskServer,\r\n    updateTaskServer,\r\n    deleteTaskServer,\r\n    getTaskServer\r\n  } from \"./ServerCall\";\r\n\r\nconst newTask = () => {\r\n  return {\r\n    title: \"New task...\",\r\n    status: \"new\",\r\n    body: \"Add notes...\"\r\n  };\r\n};\r\n\r\nexport function updateTaskItem(items, item, title, body) {\r\n  let copyOfItem = { ...item };\r\n  if (title !== undefined) {\r\n    copyOfItem.title = title;\r\n  }\r\n  if (body !== undefined) {\r\n    copyOfItem.body = body;\r\n  }\r\n  items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\r\n  updateTaskServer(copyOfItem);\r\n  return [...items];\r\n}\r\n\r\n// export function addTaskItem(items, callback) {\r\n//   let nextItems = [];\r\n//   postTaskServer(newTask()).then(item => {nextItems = [...items, item];\r\n//   callback(nextItems)});\r\n// }\r\n// async function with callback\r\n\r\nexport async function addTaskItem(items) {\r\n  const nextItems = await postTaskServer(newTask()).then(item => [...items, item]);\r\n  return nextItems;\r\n}\r\n\r\nexport function deleteTaskItem(items, item) {\r\n  let nextItems = items.filter(i => i._id !== item._id);\r\n  deleteTaskServer(item);\r\n  return nextItems;\r\n}\r\n\r\nexport function completeTaskItem(items, item) {\r\n  let copyOfItem = { ...item };\r\n  copyOfItem.status = \"completed\";\r\n  items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\r\n  updateTaskServer(copyOfItem);\r\n  return [...items];\r\n}","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nimport store from './store'\nimport TodoList from \"./components/TodoList\";\nimport TodoDetail from \"./components/TodoDetail\";\nimport {\n  getTasksServer,\n  postTaskServer,\n  updateTaskServer,\n  deleteTaskServer,\n  getTaskServer\n} from \"./ServerCall\";\nimport {updateTaskItem, addTaskItem, deleteTaskItem, completeTaskItem} from './state';\n\nconst newTask = () => {\n  return {\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  };\n};\n\nexport default function App() {\n  const [items, setItems] = useState(undefined);\n  const [activeItem, setActiveItem] = useState(undefined);\n  const state = store.getState();\n\n  async function addTask() {\n    const nextItems = await addTaskItem(items);\n    setItems(nextItems);\n  }\n\n  function selectTask(item) {\n    setActiveItem(item);\n  }\n\n  function updateTask(item, title, body) {\n    const nextItems = updateTaskItem(items, item, title, body);\n    setActiveItem(nextItems.find(obj => obj._id === item._id));\n    setItems(nextItems);\n  }\n\n  function deleteTask(item) {\n    const nextItems = deleteTaskItem(items, item);\n    setItems(nextItems);\n    setActiveItem(nextItems[0]);\n  }\n\n  function completeTask(item) {\n    const nextItems = completeTaskItem(items, item)\n    setItems(nextItems);\n  }\n\n  useEffect(() => {\n      getTasksServer().then(tasks => {\n        setItems(tasks);\n        setActiveItem(tasks[0]);\n      });\n    }, []);\n\n  return (\n    <div className=\"wrapper\">\n      <TodoList\n        items={items}\n        onAdd={addTask}\n        onSelect={selectTask}\n        onDelete={deleteTask}\n      />\n      <TodoDetail\n        active={activeItem}\n        onUpdateTask={updateTask}\n        onComplete={completeTask}\n        onDelete={deleteTask}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport store from \"./store\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}
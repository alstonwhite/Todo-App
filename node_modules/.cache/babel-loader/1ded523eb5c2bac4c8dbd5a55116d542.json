{"ast":null,"code":"import { TODO_ADD, TODO_SELECT, TODO_UPDATE, TODO_DELETE, TODO_COMPLETE } from \"./actionTypes\";\nimport { getTasksServer, postTaskServer, updateTaskServer, deleteTaskServer } from \"../ServerCall\";\n\nconst newTask = () => {\n  return {\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  };\n};\n\nexport function fetchNewTaskR(items) {\n  // console.log('redux fetch new');  \n  return function (dispatch) {\n    const nextItems = postTaskServer(newTask()).then(item => [...items, item]);\n    return dispatch(addTaskR(nextItems));\n  };\n}\nexport function addTaskR(items) {\n  // console.log('redux add');  \n  return {\n    type: TODO_ADD,\n    payload: items\n  };\n}\nexport function selectTaskR(item) {\n  // console.log('redux select');   \n  return {\n    type: TODO_SELECT,\n    payload: item\n  };\n}\nexport function updateTaskR(items, item, title, body) {\n  // console.log('redux update');   \n  return {\n    type: TODO_UPDATE,\n    payload: items\n  };\n}\nexport function deleteTaskR(items) {\n  // console.log('redux delete');   \n  return {\n    type: TODO_DELETE,\n    payload: items\n  };\n}\nexport function completeTaskR(items) {\n  // console.log('redux complete');   \n  return {\n    type: TODO_COMPLETE,\n    payload: items\n  };\n}","map":{"version":3,"sources":["C:/TodoApp/src/redux/actions.js"],"names":["TODO_ADD","TODO_SELECT","TODO_UPDATE","TODO_DELETE","TODO_COMPLETE","getTasksServer","postTaskServer","updateTaskServer","deleteTaskServer","newTask","title","status","body","fetchNewTaskR","items","dispatch","nextItems","then","item","addTaskR","type","payload","selectTaskR","updateTaskR","deleteTaskR","completeTaskR"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,WAA7C,EAA0DC,aAA1D,QAA+E,eAA/E;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,gBAJF,QAKO,eALP;;AAOA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAO;AACLC,IAAAA,KAAK,EAAE,aADF;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAAP;AAKD,CAND;;AAQA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACnC;AACA,SAAO,UAAUC,QAAV,EAAoB;AACzB,UAAMC,SAAS,GAAGV,cAAc,CAACG,OAAO,EAAR,CAAd,CAA0BQ,IAA1B,CAA+BC,IAAI,IAAI,CAAC,GAAGJ,KAAJ,EAAWI,IAAX,CAAvC,CAAlB;AACA,WAAOH,QAAQ,CAACI,QAAQ,CAACH,SAAD,CAAT,CAAf;AACD,GAHD;AAID;AAED,OAAO,SAASG,QAAT,CAAkBL,KAAlB,EAAyB;AAC9B;AACA,SAAO;AAACM,IAAAA,IAAI,EAAEpB,QAAP;AAAiBqB,IAAAA,OAAO,EAAEP;AAA1B,GAAP;AACD;AAED,OAAO,SAASQ,WAAT,CAAqBJ,IAArB,EAA2B;AAChC;AACA,SAAO;AAACE,IAAAA,IAAI,EAAEnB,WAAP;AAAoBoB,IAAAA,OAAO,EAAEH;AAA7B,GAAP;AACC;AAEH,OAAO,SAASK,WAAT,CAAqBT,KAArB,EAA4BI,IAA5B,EAAkCR,KAAlC,EAAyCE,IAAzC,EAA+C;AACpD;AACA,SAAO;AAACQ,IAAAA,IAAI,EAAElB,WAAP;AAAoBmB,IAAAA,OAAO,EAAEP;AAA7B,GAAP;AACC;AAEH,OAAO,SAASU,WAAT,CAAqBV,KAArB,EAA4B;AACjC;AACA,SAAO;AAACM,IAAAA,IAAI,EAAEjB,WAAP;AAAoBkB,IAAAA,OAAO,EAAEP;AAA7B,GAAP;AACC;AAEH,OAAO,SAASW,aAAT,CAAuBX,KAAvB,EAA8B;AACnC;AACA,SAAO;AAACM,IAAAA,IAAI,EAAEhB,aAAP;AAAsBiB,IAAAA,OAAO,EAAEP;AAA/B,GAAP;AACC","sourcesContent":["import { TODO_ADD, TODO_SELECT, TODO_UPDATE, TODO_DELETE, TODO_COMPLETE } from \"./actionTypes\";\r\nimport {\r\n  getTasksServer,\r\n  postTaskServer,\r\n  updateTaskServer,\r\n  deleteTaskServer,\r\n} from \"../ServerCall\";\r\n\r\nconst newTask = () => {\r\n  return {\r\n    title: \"New task...\",\r\n    status: \"new\",\r\n    body: \"Add notes...\"\r\n  };\r\n};\r\n\r\nexport function fetchNewTaskR(items) {\r\n  // console.log('redux fetch new');  \r\n  return function (dispatch) {\r\n    const nextItems = postTaskServer(newTask()).then(item => [...items, item]);\r\n    return dispatch(addTaskR(nextItems));\r\n  }\r\n}\r\n\r\nexport function addTaskR(items) {\r\n  // console.log('redux add');  \r\n  return {type: TODO_ADD, payload: items};\r\n}\r\n\r\nexport function selectTaskR(item) {\r\n  // console.log('redux select');   \r\n  return {type: TODO_SELECT, payload: item}\r\n  }\r\n\r\nexport function updateTaskR(items, item, title, body) {\r\n  // console.log('redux update');   \r\n  return {type: TODO_UPDATE, payload: items};\r\n  }\r\n\r\nexport function deleteTaskR(items) {\r\n  // console.log('redux delete');   \r\n  return {type: TODO_DELETE, payload: items}\r\n  }\r\n\r\nexport function completeTaskR(items) {\r\n  // console.log('redux complete');   \r\n  return {type: TODO_COMPLETE, payload: items}\r\n  }"]},"metadata":{},"sourceType":"module"}
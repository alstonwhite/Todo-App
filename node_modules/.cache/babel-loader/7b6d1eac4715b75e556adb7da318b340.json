{"ast":null,"code":"import _objectSpread from \"C:\\\\TodoApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { getTasksServer, postTaskServer, updateTaskServer, deleteTaskServer, getTaskServer } from \"../ServerCall\";\nconst initState = {\n  todos: [{\n    id: 1,\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  }],\n  //getTasksServer().then(tasks\n  activeTodo: []\n};\n\nconst newTask = () => {\n  return {\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  };\n};\n\nconst TODO_ADD = 'TODO_ADD';\nconst TODO_UPDATE = 'TODO_UPDATE';\nconst TODO_DELETE = 'TODO_DELETE';\nexport default ((state = initState, action) => {\n  switch (action.type) {\n    case TODO_ADD:\n      return _objectSpread({}, state);\n    // const nextItems = await postTaskServer(newTask()).then(item => [...items, item]);\n    // return nextItems;\n\n    case TODO_UPDATE:\n      // let copyOfItem = { ...item };\n      // if (action.title !== undefined) {\n      //   copyOfItem.title = title;\n      // }\n      // if (body !== undefined) {\n      //   copyOfItem.body = body;\n      // }\n      // items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\n      // updateTaskServer(copyOfItem);\n      // return [...items];\n      return state;\n\n    case TODO_DELETE:\n      return state;\n\n    default:\n      return state;\n  }\n\n  ;\n});","map":{"version":3,"sources":["C:/TodoApp/src/reducers/todo.js"],"names":["getTasksServer","postTaskServer","updateTaskServer","deleteTaskServer","getTaskServer","initState","todos","id","title","status","body","activeTodo","newTask","TODO_ADD","TODO_UPDATE","TODO_DELETE","state","action","type"],"mappings":";AAAA,SACIA,cADJ,EAEIC,cAFJ,EAGIC,gBAHJ,EAIIC,gBAJJ,EAKIC,aALJ,QAMS,eANT;AAQA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,CACH;AAACC,IAAAA,EAAE,EAAE,CAAL;AACAC,IAAAA,KAAK,EAAE,aADP;AAEAC,IAAAA,MAAM,EAAE,KAFR;AAGAC,IAAAA,IAAI,EAAE;AAHN,GADG,CADO;AAOd;AACAC,EAAAA,UAAU,EAAE;AARE,CAAlB;;AAWA,MAAMC,OAAO,GAAG,MAAM;AAClB,SAAO;AACLJ,IAAAA,KAAK,EAAE,aADF;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAAP;AAKD,CANH;;AAQA,MAAMG,QAAQ,GAAG,UAAjB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,gBAAe,CAACC,KAAK,GAAGX,SAAT,EAAoBY,MAApB,KAA+B;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,QAAL;AACI,+BAAWG,KAAX;AACA;AACA;;AACJ,SAAKF,WAAL;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAOE,KAAP;;AACJ,SAAKD,WAAL;AACI,aAAOC,KAAP;;AACJ;AACI,aAAOA,KAAP;AApBR;;AAqBC;AACJ,CAvBD","sourcesContent":["import {\r\n    getTasksServer,\r\n    postTaskServer,\r\n    updateTaskServer,\r\n    deleteTaskServer,\r\n    getTaskServer\r\n  } from \"../ServerCall\";\r\n\r\nconst initState = {\r\n    todos: [\r\n        {id: 1, \r\n        title: \"New task...\",\r\n        status: \"new\",\r\n        body: \"Add notes...\"}\r\n    ],\r\n    //getTasksServer().then(tasks\r\n    activeTodo: []\r\n}\r\n\r\nconst newTask = () => {\r\n    return {\r\n      title: \"New task...\",\r\n      status: \"new\",\r\n      body: \"Add notes...\"\r\n    };\r\n  };\r\n\r\nconst TODO_ADD = 'TODO_ADD';\r\nconst TODO_UPDATE = 'TODO_UPDATE';\r\nconst TODO_DELETE = 'TODO_DELETE';\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type){\r\n        case TODO_ADD:\r\n            return {...state}\r\n            // const nextItems = await postTaskServer(newTask()).then(item => [...items, item]);\r\n            // return nextItems;\r\n        case TODO_UPDATE:\r\n            // let copyOfItem = { ...item };\r\n            // if (action.title !== undefined) {\r\n            //   copyOfItem.title = title;\r\n            // }\r\n            // if (body !== undefined) {\r\n            //   copyOfItem.body = body;\r\n            // }\r\n            // items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\r\n            // updateTaskServer(copyOfItem);\r\n            // return [...items];\r\n            return state\r\n        case TODO_DELETE:\r\n            return state;\r\n        default:\r\n            return state;\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}
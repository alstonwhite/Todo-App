{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\TodoApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nconst url = \"https://crudcrud.com/api/11e0909725cb47649bd825a5a6f7fa0e/tasks\";\nexport const getTasksServer = () => {\n  return fetch(url, {\n    method: \"GET\"\n  }).then(response => response.json());\n}; // export const getTasks2 = async () => {\n//   const response = await fetch(url)\n//   return response.json();\n// }\n\nexport const getTaskServer = task => {\n  return fetch(\"\".concat(url, \"/\").concat(task._id), {\n    method: \"GET\"\n  }).then(response => response.json());\n};\nexport const postTaskServer = newTask => {\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(newTask)\n  }).then(response => response.json());\n};\nexport const updateTaskServer = (_ref) => {\n  let _id = _ref._id,\n      rest = _objectWithoutProperties(_ref, [\"_id\"]);\n\n  return fetch(\"\".concat(url, \"/\").concat(_id), {\n    method: \"PUT\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(rest)\n  }).then(response => {\n    if (response.status !== 200) {\n      console.log(\"error updating\");\n    }\n  });\n};\nexport const deleteTaskServer = task => {\n  return fetch(\"\".concat(url, \"/\").concat(task._id), {\n    method: \"DELETE\",\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(task)\n  }); // .then(console.log(\"deleted\"));\n};","map":{"version":3,"sources":["C:/TodoApp/src/ServerCall.js"],"names":["url","getTasksServer","fetch","method","then","response","json","getTaskServer","task","_id","postTaskServer","newTask","headers","body","JSON","stringify","updateTaskServer","rest","status","console","log","deleteTaskServer"],"mappings":";AAAA,MAAMA,GAAG,GAAG,iEAAZ;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAOC,KAAK,CAACF,GAAD,EAAM;AAChBG,IAAAA,MAAM,EAAE;AADQ,GAAN,CAAL,CAEJC,IAFI,CAECC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFb,CAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGC,IAAI,IAAI;AACnC,SAAON,KAAK,WAAIF,GAAJ,cAAWQ,IAAI,CAACC,GAAhB,GAAuB;AACjCN,IAAAA,MAAM,EAAE;AADyB,GAAvB,CAAL,CAEJC,IAFI,CAECC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFb,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMI,cAAc,GAAGC,OAAO,IAAI;AACvC,SAAOT,KAAK,CAACF,GAAD,EAAM;AAChBG,IAAAA,MAAM,EAAE,MADQ;AAEhBS,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFO;AAGhBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf;AAHU,GAAN,CAAL,CAIJP,IAJI,CAICC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAJb,CAAP;AAKD,CANM;AAQP,OAAO,MAAMU,gBAAgB,GAAG,UAAsB;AAAA,MAAnBP,GAAmB,QAAnBA,GAAmB;AAAA,MAAXQ,IAAW;;AACpD,SAAOf,KAAK,WAAIF,GAAJ,cAAWS,GAAX,GAAkB;AAC5BN,IAAAA,MAAM,EAAE,KADoB;AAE5BS,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFmB;AAG5BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,IAAf;AAHsB,GAAlB,CAAL,CAIJb,IAJI,CAICC,QAAQ,IAAI;AAClB,QAAIA,QAAQ,CAACa,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMC,gBAAgB,GAAGb,IAAI,IAAI;AACtC,SAAON,KAAK,WAAIF,GAAJ,cAAWQ,IAAI,CAACC,GAAhB,GAAuB;AACjCN,IAAAA,MAAM,EAAE,QADyB;AAEjCS,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFwB;AAGjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAH2B,GAAvB,CAAZ,CADsC,CAMtC;AACD,CAPM","sourcesContent":["const url = \"https://crudcrud.com/api/11e0909725cb47649bd825a5a6f7fa0e/tasks\";\r\n\r\nexport const getTasksServer = () => {\r\n  return fetch(url, {\r\n    method: \"GET\"\r\n  }).then(response => response.json());\r\n};\r\n\r\n// export const getTasks2 = async () => {\r\n//   const response = await fetch(url)\r\n//   return response.json();\r\n// }\r\n\r\nexport const getTaskServer = task => {\r\n  return fetch(`${url}/${task._id}`, {\r\n    method: \"GET\"\r\n  }).then(response => response.json());\r\n};\r\n\r\nexport const postTaskServer = newTask => {\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(newTask)\r\n  }).then(response => response.json());\r\n};\r\n\r\nexport const updateTaskServer = ({ _id, ...rest }) => {\r\n  return fetch(`${url}/${_id}`, {\r\n    method: \"PUT\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(rest)\r\n  }).then(response => {\r\n    if (response.status !== 200) {\r\n      console.log(\"error updating\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteTaskServer = task => {\r\n  return fetch(`${url}/${task._id}`, {\r\n    method: \"DELETE\",\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify(task)\r\n  });\r\n  // .then(console.log(\"deleted\"));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
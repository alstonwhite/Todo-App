{"ast":null,"code":"import _slicedToArray from \"C:\\\\TodoApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TodoApp\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport TodoList from \"./components/TodoList\";\nimport TodoDetail from \"./components/TodoDetail\";\nimport { getTasksServer, postTaskServer, updateTaskServer, deleteTaskServer, getTaskServer } from \"./ServerCall\";\nimport { updateTaskItem, addTaskItem, deleteTaskItem } from './state';\n\nconst newTask = () => {\n  return {\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  };\n};\n\nexport default function App() {\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        items = _useState2[0],\n        setItems = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeItem = _useState4[0],\n        setActiveItem = _useState4[1];\n\n  function addTask() {\n    postTaskServer(newTask()).then(item => setItems([...items, item])); // const nextItems = addTaskItem(items);\n    // setActiveItem(nextItems.find(obj => obj._id === item._id));\n    // setItems(nextItems);\n  }\n\n  function selectTask(item) {\n    setActiveItem(item);\n  }\n\n  function updateTask(item, title, body) {\n    const nextItems = updateTaskItem(items, item, title, body);\n    setActiveItem(nextItems.find(obj => obj._id === item._id));\n    setItems(nextItems); // let copyOfItem = { ...item };\n    // if (title !== undefined) {\n    //   copyOfItem.title = title;\n    // }\n    // if (body !== undefined) {\n    //   copyOfItem.body = body;\n    // }\n    // setActiveItem(copyOfItem);\n    // items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\n    // updateTaskServer(copyOfItem);\n    // setItems([...items]);\n  }\n\n  function deleteTask(item) {\n    // let copyOfItems = items.filter(i => i._id !== item._id);\n    // deleteTaskServer(item);\n    const nextItems = deleteTaskItem(items, item);\n    setItems(nextItems);\n    setActiveItem(nextItems[0]); // setActiveItem(copyOfItems[0]);\n  }\n\n  function completeTask(item) {\n    item.status = \"completed\";\n    updateTaskServer(item);\n    setItems(items);\n  }\n\n  useEffect(() => {\n    getTasksServer().then(tasks => {\n      setItems(tasks);\n      setActiveItem(tasks[0]);\n    });\n  }, []); // function loadApp() {\n  //   getTasksServer().then(tasks => {\n  //     setItems(tasks);\n  //     setActiveItem(tasks[0]);\n  //   }, []);\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TodoList, {\n    items: items,\n    onAdd: addTask,\n    onSelect: selectTask,\n    onDelete: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoDetail, {\n    active: activeItem,\n    onUpdateTask: updateTask,\n    onComplete: completeTask,\n    onDelete: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/TodoApp/src/App.js"],"names":["React","useState","useEffect","TodoList","TodoDetail","getTasksServer","postTaskServer","updateTaskServer","deleteTaskServer","getTaskServer","updateTaskItem","addTaskItem","deleteTaskItem","newTask","title","status","body","App","undefined","items","setItems","activeItem","setActiveItem","addTask","then","item","selectTask","updateTask","nextItems","find","obj","_id","deleteTask","completeTask","tasks"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,gBAJF,EAKEC,aALF,QAMO,cANP;AAOA,SAAQC,cAAR,EAAwBC,WAAxB,EAAqCC,cAArC,QAA0D,SAA1D;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAO;AACLC,IAAAA,KAAK,EAAE,aADF;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAAP;AAKD,CAND;;AAQA,eAAe,SAASC,GAAT,GAAe;AAAA,oBACFhB,QAAQ,CAACiB,SAAD,CADN;AAAA;AAAA,QACrBC,KADqB;AAAA,QACdC,QADc;;AAAA,qBAEQnB,QAAQ,CAACiB,SAAD,CAFhB;AAAA;AAAA,QAErBG,UAFqB;AAAA,QAETC,aAFS;;AAI5B,WAASC,OAAT,GAAmB;AACjBjB,IAAAA,cAAc,CAACO,OAAO,EAAR,CAAd,CAA0BW,IAA1B,CAA+BC,IAAI,IAAIL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,IAAX,CAAD,CAA/C,EADiB,CAEjB;AACA;AACA;AACD;;AACD,WAASC,UAAT,CAAoBD,IAApB,EAA0B;AACxBH,IAAAA,aAAa,CAACG,IAAD,CAAb;AACD;;AACD,WAASE,UAAT,CAAoBF,IAApB,EAA0BX,KAA1B,EAAiCE,IAAjC,EAAuC;AACrC,UAAMY,SAAS,GAAGlB,cAAc,CAACS,KAAD,EAAQM,IAAR,EAAcX,KAAd,EAAqBE,IAArB,CAAhC;AACAM,IAAAA,aAAa,CAACM,SAAS,CAACC,IAAV,CAAeC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYN,IAAI,CAACM,GAAvC,CAAD,CAAb;AACAX,IAAAA,QAAQ,CAACQ,SAAD,CAAR,CAHqC,CAIrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACD,WAASI,UAAT,CAAoBP,IAApB,EAA0B;AACxB;AACA;AACA,UAAMG,SAAS,GAAGhB,cAAc,CAACO,KAAD,EAAQM,IAAR,CAAhC;AACAL,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACAN,IAAAA,aAAa,CAACM,SAAS,CAAC,CAAD,CAAV,CAAb,CALwB,CAMxB;AACD;;AACD,WAASK,YAAT,CAAsBR,IAAtB,EAA4B;AAC1BA,IAAAA,IAAI,CAACV,MAAL,GAAc,WAAd;AACAR,IAAAA,gBAAgB,CAACkB,IAAD,CAAhB;AACAL,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDjB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,GAAGmB,IAAjB,CAAsBU,KAAK,IAAI;AAC7Bd,MAAAA,QAAQ,CAACc,KAAD,CAAR;AACAZ,MAAAA,aAAa,CAACY,KAAK,CAAC,CAAD,CAAN,CAAb;AACD,KAHD;AAID,GALM,EAKJ,EALI,CAAT,CA3C4B,CAkD5B;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEf,KADT;AAEE,IAAA,KAAK,EAAEI,OAFT;AAGE,IAAA,QAAQ,EAAEG,UAHZ;AAIE,IAAA,QAAQ,EAAEM,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEX,UADV;AAEE,IAAA,YAAY,EAAEM,UAFhB;AAGE,IAAA,UAAU,EAAEM,YAHd;AAIE,IAAA,QAAQ,EAAED,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nimport TodoList from \"./components/TodoList\";\nimport TodoDetail from \"./components/TodoDetail\";\nimport {\n  getTasksServer,\n  postTaskServer,\n  updateTaskServer,\n  deleteTaskServer,\n  getTaskServer\n} from \"./ServerCall\";\nimport {updateTaskItem, addTaskItem, deleteTaskItem} from './state';\n\nconst newTask = () => {\n  return {\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  };\n};\n\nexport default function App() {\n  const [items, setItems] = useState(undefined);\n  const [activeItem, setActiveItem] = useState(undefined);\n\n  function addTask() {\n    postTaskServer(newTask()).then(item => setItems([...items, item]));\n    // const nextItems = addTaskItem(items);\n    // setActiveItem(nextItems.find(obj => obj._id === item._id));\n    // setItems(nextItems);\n  }\n  function selectTask(item) {\n    setActiveItem(item);\n  }\n  function updateTask(item, title, body) {\n    const nextItems = updateTaskItem(items, item, title, body);\n    setActiveItem(nextItems.find(obj => obj._id === item._id));\n    setItems(nextItems);\n    // let copyOfItem = { ...item };\n    // if (title !== undefined) {\n    //   copyOfItem.title = title;\n    // }\n    // if (body !== undefined) {\n    //   copyOfItem.body = body;\n    // }\n    // setActiveItem(copyOfItem);\n    // items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\n    // updateTaskServer(copyOfItem);\n    // setItems([...items]);\n  }\n  function deleteTask(item) {\n    // let copyOfItems = items.filter(i => i._id !== item._id);\n    // deleteTaskServer(item);\n    const nextItems = deleteTaskItem(items, item)\n    setItems(nextItems);\n    setActiveItem(nextItems[0]);\n    // setActiveItem(copyOfItems[0]);\n  }\n  function completeTask(item) {\n    item.status = \"completed\";\n    updateTaskServer(item);\n    setItems(items);\n  }\n\n  useEffect(() => {\n      getTasksServer().then(tasks => {\n        setItems(tasks);\n        setActiveItem(tasks[0]);\n      });\n    }, []);\n\n  // function loadApp() {\n  //   getTasksServer().then(tasks => {\n  //     setItems(tasks);\n  //     setActiveItem(tasks[0]);\n  //   }, []);\n  // }\n\n  return (\n    <div className=\"wrapper\">\n      {/* <button onClick={() => loadApp()}>Load</button> */}\n      <TodoList\n        items={items}\n        onAdd={addTask}\n        onSelect={selectTask}\n        onDelete={deleteTask}\n      />\n      <TodoDetail\n        active={activeItem}\n        onUpdateTask={updateTask}\n        onComplete={completeTask}\n        onDelete={deleteTask}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
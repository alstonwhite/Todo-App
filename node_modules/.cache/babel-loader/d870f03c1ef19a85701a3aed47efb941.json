{"ast":null,"code":"import _objectSpread from \"C:\\\\TodoApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\TodoApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\TodoApp\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport TodoList from \"./components/TodoList\";\nimport TodoDetail from \"./components/TodoDetail\";\nimport { getTasksServer, postTaskServer, updateTaskServer, deleteTaskServer, getTaskServer } from \"./ServerCall\";\n\nconst newTask = () => {\n  return {\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  };\n};\n\nexport default function App() {\n  const _useState = useState(undefined),\n        _useState2 = _slicedToArray(_useState, 2),\n        items = _useState2[0],\n        setItems = _useState2[1];\n\n  const _useState3 = useState(undefined),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeItem = _useState4[0],\n        setActiveItem = _useState4[1];\n\n  function addTask() {\n    postTaskServer(newTask()).then(item => setItems([...items, item]));\n  }\n\n  function selectTask(item) {\n    setActiveItem(item);\n  }\n\n  function updateTask(item, title, body) {\n    let copyOfItem = _objectSpread({}, item);\n\n    if (title !== undefined) {\n      copyOfItem.title = title;\n    }\n\n    if (body !== undefined) {\n      copyOfItem.body = body;\n    }\n\n    setActiveItem(copyOfItem);\n    items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\n    updateTaskServer(copyOfItem);\n    setItems([...items]);\n  }\n\n  function deleteTask(item) {\n    let copyOfItems = items.filter(i => i._id !== item._id);\n    deleteTaskServer(item);\n    setItems(copyOfItems); // setActiveItem(copyOfItems[0]);\n  }\n\n  function completeTask(item) {\n    item.status = \"completed\";\n    updateTaskServer(item);\n    setItems(items);\n  } // useEffect(() => {\n  //     getTasksServer().then(tasks => {\n  //       setItems(tasks);\n  //       setActiveItem(tasks[0]);\n  //     });\n  //   }, []);\n\n\n  function loadApp() {\n    getTasksServer().then(tasks => {\n      setItems(tasks);\n      setActiveItem(tasks[0]);\n    }, []);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => loadApp(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Load\"), /*#__PURE__*/React.createElement(TodoList, {\n    items: items,\n    onAdd: addTask,\n    onSelect: selectTask,\n    onDelete: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TodoDetail, {\n    active: activeItem,\n    onUpdateTask: updateTask,\n    onComplete: completeTask,\n    onDelete: deleteTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/TodoApp/src/App.js"],"names":["React","useState","useEffect","TodoList","TodoDetail","getTasksServer","postTaskServer","updateTaskServer","deleteTaskServer","getTaskServer","newTask","title","status","body","App","undefined","items","setItems","activeItem","setActiveItem","addTask","then","item","selectTask","updateTask","copyOfItem","findIndex","obj","_id","deleteTask","copyOfItems","filter","i","completeTask","loadApp","tasks"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,gBAHF,EAIEC,gBAJF,EAKEC,aALF,QAMO,cANP;;AAQA,MAAMC,OAAO,GAAG,MAAM;AACpB,SAAO;AACLC,IAAAA,KAAK,EAAE,aADF;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,IAAI,EAAE;AAHD,GAAP;AAKD,CAND;;AAQA,eAAe,SAASC,GAAT,GAAe;AAAA,oBACFb,QAAQ,CAACc,SAAD,CADN;AAAA;AAAA,QACrBC,KADqB;AAAA,QACdC,QADc;;AAAA,qBAEQhB,QAAQ,CAACc,SAAD,CAFhB;AAAA;AAAA,QAErBG,UAFqB;AAAA,QAETC,aAFS;;AAI5B,WAASC,OAAT,GAAmB;AACjBd,IAAAA,cAAc,CAACI,OAAO,EAAR,CAAd,CAA0BW,IAA1B,CAA+BC,IAAI,IAAIL,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWM,IAAX,CAAD,CAA/C;AACD;;AACD,WAASC,UAAT,CAAoBD,IAApB,EAA0B;AACxBH,IAAAA,aAAa,CAACG,IAAD,CAAb;AACD;;AACD,WAASE,UAAT,CAAoBF,IAApB,EAA0BX,KAA1B,EAAiCE,IAAjC,EAAuC;AACrC,QAAIY,UAAU,qBAAQH,IAAR,CAAd;;AACA,QAAIX,KAAK,KAAKI,SAAd,EAAyB;AACvBU,MAAAA,UAAU,CAACd,KAAX,GAAmBA,KAAnB;AACD;;AACD,QAAIE,IAAI,KAAKE,SAAb,EAAwB;AACtBU,MAAAA,UAAU,CAACZ,IAAX,GAAkBA,IAAlB;AACD;;AACDM,IAAAA,aAAa,CAACM,UAAD,CAAb;AACAT,IAAAA,KAAK,CAACA,KAAK,CAACU,SAAN,CAAgBC,GAAG,IAAIA,GAAG,CAACC,GAAJ,KAAYH,UAAU,CAACG,GAA9C,CAAD,CAAL,GAA4DH,UAA5D;AACAlB,IAAAA,gBAAgB,CAACkB,UAAD,CAAhB;AACAR,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,CAAD,CAAR;AACD;;AACD,WAASa,UAAT,CAAoBP,IAApB,EAA0B;AACxB,QAAIQ,WAAW,GAAGd,KAAK,CAACe,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACJ,GAAF,KAAUN,IAAI,CAACM,GAAjC,CAAlB;AACApB,IAAAA,gBAAgB,CAACc,IAAD,CAAhB;AACAL,IAAAA,QAAQ,CAACa,WAAD,CAAR,CAHwB,CAIxB;AACD;;AACD,WAASG,YAAT,CAAsBX,IAAtB,EAA4B;AAC1BA,IAAAA,IAAI,CAACV,MAAL,GAAc,WAAd;AACAL,IAAAA,gBAAgB,CAACe,IAAD,CAAhB;AACAL,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAjC2B,CAmC5B;AACA;AACA;AACA;AACA;AACA;;;AAEA,WAASkB,OAAT,GAAmB;AACjB7B,IAAAA,cAAc,GAAGgB,IAAjB,CAAsBc,KAAK,IAAI;AAC7BlB,MAAAA,QAAQ,CAACkB,KAAD,CAAR;AACAhB,MAAAA,aAAa,CAACgB,KAAK,CAAC,CAAD,CAAN,CAAb;AACD,KAHD,EAGG,EAHH;AAID;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAE,MAAMD,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAElB,KADT;AAEE,IAAA,KAAK,EAAEI,OAFT;AAGE,IAAA,QAAQ,EAAEG,UAHZ;AAIE,IAAA,QAAQ,EAAEM,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE,oBAAC,UAAD;AACE,IAAA,MAAM,EAAEX,UADV;AAEE,IAAA,YAAY,EAAEM,UAFhB;AAGE,IAAA,UAAU,EAAES,YAHd;AAIE,IAAA,QAAQ,EAAEJ,UAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nimport TodoList from \"./components/TodoList\";\nimport TodoDetail from \"./components/TodoDetail\";\nimport {\n  getTasksServer,\n  postTaskServer,\n  updateTaskServer,\n  deleteTaskServer,\n  getTaskServer\n} from \"./ServerCall\";\n\nconst newTask = () => {\n  return {\n    title: \"New task...\",\n    status: \"new\",\n    body: \"Add notes...\"\n  };\n};\n\nexport default function App() {\n  const [items, setItems] = useState(undefined);\n  const [activeItem, setActiveItem] = useState(undefined);\n\n  function addTask() {\n    postTaskServer(newTask()).then(item => setItems([...items, item]));\n  }\n  function selectTask(item) {\n    setActiveItem(item);\n  }\n  function updateTask(item, title, body) {\n    let copyOfItem = { ...item };\n    if (title !== undefined) {\n      copyOfItem.title = title;\n    }\n    if (body !== undefined) {\n      copyOfItem.body = body;\n    }\n    setActiveItem(copyOfItem);\n    items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\n    updateTaskServer(copyOfItem);\n    setItems([...items]);\n  }\n  function deleteTask(item) {\n    let copyOfItems = items.filter(i => i._id !== item._id);\n    deleteTaskServer(item);\n    setItems(copyOfItems);\n    // setActiveItem(copyOfItems[0]);\n  }\n  function completeTask(item) {\n    item.status = \"completed\";\n    updateTaskServer(item);\n    setItems(items);\n  }\n\n  // useEffect(() => {\n  //     getTasksServer().then(tasks => {\n  //       setItems(tasks);\n  //       setActiveItem(tasks[0]);\n  //     });\n  //   }, []);\n\n  function loadApp() {\n    getTasksServer().then(tasks => {\n      setItems(tasks);\n      setActiveItem(tasks[0]);\n    }, []);\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <button onClick={() => loadApp()}>Load</button>\n      <TodoList\n        items={items}\n        onAdd={addTask}\n        onSelect={selectTask}\n        onDelete={deleteTask}\n      />\n      <TodoDetail\n        active={activeItem}\n        onUpdateTask={updateTask}\n        onComplete={completeTask}\n        onDelete={deleteTask}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"map":"{\"version\":3,\"sources\":[\"C:/TodoApp/src/ServerCall.js\",\"C:/TodoApp/src/reducers/todo.js\",\"C:/TodoApp/src/store.js\",\"C:/TodoApp/src/components/TodoItem.js\",\"C:/TodoApp/src/components/TodoList.js\",\"C:/TodoApp/src/components/TodoDetail.js\",\"C:/TodoApp/src/state.js\",\"C:/TodoApp/src/App.js\",\"C:/TodoApp/src/index.js\"],\"names\":[\"url\",\"getTasksServer\",\"fetch\",\"method\",\"then\",\"response\",\"json\",\"postTaskServer\",\"newTask\",\"headers\",\"content-type\",\"body\",\"JSON\",\"stringify\",\"updateTaskServer\",\"_ref\",\"_id\",\"rest\",\"Object\",\"objectWithoutProperties\",\"console\",\"log\",\"concat\",\"status\",\"deleteTaskServer\",\"task\",\"initState\",\"todos\",\"id\",\"title\",\"activeTodo\",\"createStore\",\"state\",\"action\",\"type\",\"objectSpread2\",\"TodoItem\",\"item\",\"onSelect\",\"onDelete\",\"onComplete\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"TodoList\",\"items\",\"onAdd\",\"value\",\"map\",\"components_TodoItem\",\"key\",\"undefined\",\"TodoDetail\",\"active\",\"onUpdateTask\",\"onChange\",\"event\",\"target\",\"addTaskItem\",\"_x\",\"_addTaskItem\",\"apply\",\"this\",\"arguments\",\"_callee\",\"nextItems\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"sent\",\"abrupt\",\"stop\",\"App\",\"_useState\",\"useState\",\"_useState2\",\"slicedToArray\",\"setItems\",\"_useState3\",\"_useState4\",\"activeItem\",\"setActiveItem\",\"store\",\"getState\",\"_addTask\",\"asyncToGenerator\",\"mark\",\"deleteTask\",\"filter\",\"i\",\"deleteTaskItem\",\"useEffect\",\"tasks\",\"components_TodoList\",\"components_TodoDetail\",\"copyOfItem\",\"findIndex\",\"obj\",\"updateTaskItem\",\"find\",\"completeTaskItem\",\"rootElement\",\"document\",\"getElementById\",\"ReactDOM\",\"render\",\"Provider\"],\"mappings\":\"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\",\"sourcesContent\":[\"const url = \\\"https://crudcrud.com/api/11e0909725cb47649bd825a5a6f7fa0e/tasks\\\";\\r\\n\\r\\nexport const getTasksServer = () => {\\r\\n  return fetch(url, {\\r\\n    method: \\\"GET\\\"\\r\\n  }).then(response => response.json());\\r\\n};\\r\\n\\r\\nexport const getTaskServer = task => {\\r\\n  return fetch(`${url}/${task._id}`, {\\r\\n    method: \\\"GET\\\"\\r\\n  }).then(response => response.json());\\r\\n};\\r\\n\\r\\nexport const postTaskServer = newTask => {\\r\\n  return fetch(url, {\\r\\n    method: \\\"POST\\\",\\r\\n    headers: { \\\"content-type\\\": \\\"application/json\\\" },\\r\\n    body: JSON.stringify(newTask)\\r\\n  }).then(response => response.json());\\r\\n};\\r\\n\\r\\nexport const updateTaskServer = ({ _id, ...rest }) => {\\r\\n  console.log('update function start')\\r\\n  return fetch(`${url}/${_id}`, {\\r\\n    method: \\\"PUT\\\",\\r\\n    headers: { \\\"content-type\\\": \\\"application/json\\\" },\\r\\n    body: JSON.stringify(rest)\\r\\n  }).then(response => {\\r\\n    if (response.status !== 200) {\\r\\n      console.log(\\\"error updating\\\");\\r\\n    }\\r\\n  });\\r\\n};\\r\\n\\r\\nexport const deleteTaskServer = task => {\\r\\n  return fetch(`${url}/${task._id}`, {\\r\\n    method: \\\"DELETE\\\",\\r\\n    headers: { \\\"content-type\\\": \\\"application/json\\\" },\\r\\n    body: JSON.stringify(task)\\r\\n  });\\r\\n  // .then(console.log(\\\"deleted\\\"));\\r\\n};\\r\\n\",\"import {\\r\\n    getTasksServer,\\r\\n    postTaskServer,\\r\\n    updateTaskServer,\\r\\n    deleteTaskServer,\\r\\n    getTaskServer\\r\\n  } from \\\"../ServerCall\\\";\\r\\n\\r\\nconst initState = {\\r\\n    todos: [\\r\\n        {id: 1, \\r\\n        title: \\\"New task...\\\",\\r\\n        status: \\\"new\\\",\\r\\n        body: \\\"Add notes...\\\"}\\r\\n    ],\\r\\n    //getTasksServer().then(tasks\\r\\n    activeTodo: todos[0]\\r\\n}\\r\\n\\r\\nconst newTask = () => {\\r\\n    return {\\r\\n      title: \\\"New task...\\\",\\r\\n      status: \\\"new\\\",\\r\\n      body: \\\"Add notes...\\\"\\r\\n    };\\r\\n  };\\r\\n\\r\\nconst TODO_ADD = 'TODO_ADD';\\r\\nconst TODO_UPDATE = 'TODO_UPDATE';\\r\\nconst TODO_DELETE = 'TODO_DELETE';\\r\\n\\r\\nexport default (state = initState, action) => {\\r\\n    switch (action.type){\\r\\n        case TODO_ADD:\\r\\n            return {...state}\\r\\n            // const nextItems = await postTaskServer(newTask()).then(item => [...items, item]);\\r\\n            // return nextItems;\\r\\n        case TODO_UPDATE:\\r\\n            // let copyOfItem = { ...item };\\r\\n            // if (action.title !== undefined) {\\r\\n            //   copyOfItem.title = title;\\r\\n            // }\\r\\n            // if (body !== undefined) {\\r\\n            //   copyOfItem.body = body;\\r\\n            // }\\r\\n            // items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\\r\\n            // updateTaskServer(copyOfItem);\\r\\n            // return [...items];\\r\\n            return state\\r\\n        case TODO_DELETE:\\r\\n            return state;\\r\\n        default:\\r\\n            return state;\\r\\n    };\\r\\n}\",\"import {createStore} from 'redux'\\r\\nimport reducer from './reducers/todo'\\r\\n\\r\\nexport default createStore(reducer);\",\"import React from \\\"react\\\";\\n\\nconst TodoItem = ({ item, onSelect, onDelete, onComplete }) => {\\n  if (item.status === \\\"new\\\") {\\n    return (\\n      <li>\\n        <button className=\\\"button task-button\\\" onClick={() => onSelect(item)}>\\n          {item.title}\\n        </button>\\n        <button\\n          className=\\\"button button-small button-delete\\\"\\n          onClick={() => onDelete(item)}\\n        >\\n          X\\n        </button>\\n      </li>\\n    );\\n  } else {\\n    return (\\n      <li>\\n        <button className=\\\"button task-button\\\" onClick={() => onSelect(item)}>\\n          {item.title}\\n        </button>\\n        <button className=\\\"button button-small button-complete\\\">✔</button>\\n      </li>\\n    );\\n  }\\n};\\n\\nexport default TodoItem;\\n\",\"import React from \\\"react\\\";\\r\\n\\r\\nimport TodoItem from \\\"./TodoItem\\\";\\r\\n\\r\\nconst TodoList = ({ items, onAdd, onSelect, onDelete, onComplete }) => {\\r\\n  return (\\r\\n    <div className=\\\"app-column\\\">\\r\\n      <div className=\\\"header app-header\\\">\\r\\n        <div className=\\\"app-title\\\">To-Do App</div>\\r\\n        <button\\r\\n          className=\\\"button button-medium button-add\\\"\\r\\n          value=\\\"Add\\\"\\r\\n          onClick={() => onAdd()}\\r\\n        >\\r\\n          Add\\r\\n        </button>\\r\\n      </div>\\r\\n      <div className=\\\"task-list\\\">\\r\\n        <ul>\\r\\n          {items &&\\r\\n            items.map(item => (\\r\\n              <TodoItem\\r\\n                key = {item._id}\\r\\n                item={item !== undefined && item}\\r\\n                onSelect={onSelect}\\r\\n                onDelete={onDelete}\\r\\n                onComplete={onComplete}\\r\\n              />\\r\\n            ))}\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\nexport default TodoList;\\r\\n\",\"import React from \\\"react\\\";\\r\\n\\r\\nconst TodoDetail = ({ active, onUpdateTask, onComplete, onDelete }) => {\\r\\n  return (\\r\\n    <div className=\\\"app-column\\\">\\r\\n      <div className=\\\"header task-header\\\">\\r\\n        <input\\r\\n          className=\\\"title-input\\\"\\r\\n          type=\\\"text\\\"\\r\\n          value={active ? active.title : \\\"\\\"}\\r\\n          onChange={event => onUpdateTask(active, event.target.value)}\\r\\n        />\\r\\n        <button\\r\\n          className=\\\"button button-large button-complete\\\"\\r\\n          onClick={() => onComplete(active)}\\r\\n        >\\r\\n          Complete\\r\\n        </button>{\\\" \\\"}\\r\\n        <button\\r\\n          className=\\\"button button-large button-delete\\\"\\r\\n          onClick={() => onDelete(active)}\\r\\n        >\\r\\n          Remove\\r\\n        </button>{\\\" \\\"}\\r\\n      </div>\\r\\n      <div className=\\\"task-body\\\">\\r\\n        <textarea\\r\\n          className=\\\"body-text\\\"\\r\\n          type=\\\"text\\\"\\r\\n          value={active ? active.body : \\\"\\\"}\\r\\n          onChange={event =>\\r\\n            onUpdateTask(active, undefined, event.target.value)\\r\\n          }\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default TodoDetail;\\r\\n\",\"import {\\r\\n    getTasksServer,\\r\\n    postTaskServer,\\r\\n    updateTaskServer,\\r\\n    deleteTaskServer,\\r\\n    getTaskServer\\r\\n  } from \\\"./ServerCall\\\";\\r\\n\\r\\nconst newTask = () => {\\r\\n  return {\\r\\n    title: \\\"New task...\\\",\\r\\n    status: \\\"new\\\",\\r\\n    body: \\\"Add notes...\\\"\\r\\n  };\\r\\n};\\r\\n\\r\\nexport function updateTaskItem(items, item, title, body) {\\r\\n  let copyOfItem = { ...item };\\r\\n  if (title !== undefined) {\\r\\n    copyOfItem.title = title;\\r\\n  }\\r\\n  if (body !== undefined) {\\r\\n    copyOfItem.body = body;\\r\\n  }\\r\\n  items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\\r\\n  updateTaskServer(copyOfItem);\\r\\n  return [...items];\\r\\n}\\r\\n\\r\\n// export function addTaskItem(items, callback) {\\r\\n//   let nextItems = [];\\r\\n//   postTaskServer(newTask()).then(item => {nextItems = [...items, item];\\r\\n//   callback(nextItems)});\\r\\n// }\\r\\n// add a callback function\\r\\nexport async function addTaskItem(items) {\\r\\n  const nextItems = await postTaskServer(newTask()).then(item => [...items, item]);\\r\\n  return nextItems;\\r\\n  // const nextItem = await postTaskServer(newTask());\\r\\n  // return [...items, nextItem]\\r\\n}\\r\\n// reform to async function\\r\\n\\r\\nexport function deleteTaskItem(items, item) {\\r\\n  let nextItems = items.filter(i => i._id !== item._id);\\r\\n  deleteTaskServer(item);\\r\\n  return nextItems;\\r\\n}\\r\\n\\r\\nexport function completeTaskItem(items, item) {\\r\\n  let copyOfItem = { ...item };\\r\\n  copyOfItem.status = \\\"completed\\\";\\r\\n  items[items.findIndex(obj => obj._id === copyOfItem._id)] = copyOfItem;\\r\\n  updateTaskServer(copyOfItem);\\r\\n  return [...items];\\r\\n}\",\"import React, { useState, useEffect } from \\\"react\\\";\\nimport \\\"./styles.css\\\";\\n\\nimport store from './store'\\nimport TodoList from \\\"./components/TodoList\\\";\\nimport TodoDetail from \\\"./components/TodoDetail\\\";\\nimport {\\n  getTasksServer,\\n  postTaskServer,\\n  updateTaskServer,\\n  deleteTaskServer,\\n  getTaskServer\\n} from \\\"./ServerCall\\\";\\nimport {updateTaskItem, addTaskItem, deleteTaskItem, completeTaskItem} from './state';\\n\\nconst newTask = () => {\\n  return {\\n    title: \\\"New task...\\\",\\n    status: \\\"new\\\",\\n    body: \\\"Add notes...\\\"\\n  };\\n};\\n\\nexport default function App() {\\n  const [items, setItems] = useState(undefined);\\n  const [activeItem, setActiveItem] = useState(undefined);\\n  const state = store.getState();\\n\\n  async function addTask() {\\n    const nextItems = await addTaskItem(items);\\n    setItems(nextItems);\\n  }\\n\\n  function selectTask(item) {\\n    setActiveItem(item);\\n  }\\n\\n  function updateTask(item, title, body) {\\n    const nextItems = updateTaskItem(items, item, title, body);\\n    setActiveItem(nextItems.find(obj => obj._id === item._id));\\n    setItems(nextItems);\\n  }\\n\\n  function deleteTask(item) {\\n    const nextItems = deleteTaskItem(items, item);\\n    setItems(nextItems);\\n    setActiveItem(nextItems[0]);\\n  }\\n\\n  function completeTask(item) {\\n    const nextItems = completeTaskItem(items, item)\\n    setItems(nextItems);\\n  }\\n\\n  useEffect(() => {\\n      getTasksServer().then(tasks => {\\n        setItems(tasks);\\n        setActiveItem(tasks[0]);\\n      });\\n    }, []);\\n\\n  return (\\n    <div className=\\\"wrapper\\\">\\n      <TodoList\\n        items={items}\\n        onAdd={addTask}\\n        onSelect={selectTask}\\n        onDelete={deleteTask}\\n      />\\n      <TodoDetail\\n        active={activeItem}\\n        onUpdateTask={updateTask}\\n        onComplete={completeTask}\\n        onDelete={deleteTask}\\n      />\\n    </div>\\n  );\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\n\\nimport App from \\\"./App\\\";\\nimport store from \\\"./store\\\";\\n\\nconst rootElement = document.getElementById(\\\"root\\\");\\nReactDOM.render(\\n  <Provider store={store}>\\n    <App />\\n  </Provider>,\\n  rootElement\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(20)},17:function(e,t,n){},20:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),c=n(7),l=n.n(c),s=n(1),r=n.n(s),i=n(3),u=n(5),d=(n(17),n(8)),m=n(2),p=n(10);const b=\"https://crudcrud.com/api/11e0909725cb47649bd825a5a6f7fa0e/tasks\",f=()=>fetch(b,{method:\"GET\"}).then(e=>e.json()),E=e=>fetch(b,{method:\"POST\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify(e)}).then(e=>e.json()),v=e=>{let t=e._id,n=Object(p.a)(e,[\"_id\"]);return console.log(\"update function start\"),fetch(\"\".concat(b,\"/\").concat(t),{method:\"PUT\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify(n)}).then(e=>{200!==e.status&&console.log(\"error updating\")})},h=e=>fetch(\"\".concat(b,\"/\").concat(e._id),{method:\"DELETE\",headers:{\"content-type\":\"application/json\"},body:JSON.stringify(e)}),y={todos:[{id:1,title:\"New task...\",status:\"new\",body:\"Add notes...\"}],activeTodo:todos[0]};var N=Object(d.a)((e=y,t)=>{switch(t.type){case\"TODO_ADD\":return Object(m.a)({},e);case\"TODO_UPDATE\":case\"TODO_DELETE\":default:return e}});var O=({item:e,onSelect:t,onDelete:n,onComplete:a})=>\"new\"===e.status?o.a.createElement(\"li\",null,o.a.createElement(\"button\",{className:\"button task-button\",onClick:()=>t(e)},e.title),o.a.createElement(\"button\",{className:\"button button-small button-delete\",onClick:()=>n(e)},\"X\")):o.a.createElement(\"li\",null,o.a.createElement(\"button\",{className:\"button task-button\",onClick:()=>t(e)},e.title),o.a.createElement(\"button\",{className:\"button button-small button-complete\"},\"\\u2714\"));var k=({items:e,onAdd:t,onSelect:n,onDelete:a,onComplete:c})=>o.a.createElement(\"div\",{className:\"app-column\"},o.a.createElement(\"div\",{className:\"header app-header\"},o.a.createElement(\"div\",{className:\"app-title\"},\"To-Do App\"),o.a.createElement(\"button\",{className:\"button button-medium button-add\",value:\"Add\",onClick:()=>t()},\"Add\")),o.a.createElement(\"div\",{className:\"task-list\"},o.a.createElement(\"ul\",null,e&&e.map(e=>o.a.createElement(O,{key:e._id,item:void 0!==e&&e,onSelect:n,onDelete:a,onComplete:c})))));var j=({active:e,onUpdateTask:t,onComplete:n,onDelete:a})=>o.a.createElement(\"div\",{className:\"app-column\"},o.a.createElement(\"div\",{className:\"header task-header\"},o.a.createElement(\"input\",{className:\"title-input\",type:\"text\",value:e?e.title:\"\",onChange:n=>t(e,n.target.value)}),o.a.createElement(\"button\",{className:\"button button-large button-complete\",onClick:()=>n(e)},\"Complete\"),\" \",o.a.createElement(\"button\",{className:\"button button-large button-delete\",onClick:()=>a(e)},\"Remove\"),\" \"),o.a.createElement(\"div\",{className:\"task-body\"},o.a.createElement(\"textarea\",{className:\"body-text\",type:\"text\",value:e?e.body:\"\",onChange:n=>t(e,void 0,n.target.value)})));const w=()=>({title:\"New task...\",status:\"new\",body:\"Add notes...\"});function D(e){return _.apply(this,arguments)}function _(){return(_=Object(i.a)(r.a.mark(function e(t){var n;return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,E(w()).then(e=>[...t,e]);case 2:return n=e.sent,e.abrupt(\"return\",n);case 4:case\"end\":return e.stop()}},e)}))).apply(this,arguments)}function g(){const e=Object(a.useState)(void 0),t=Object(u.a)(e,2),n=t[0],c=t[1],l=Object(a.useState)(void 0),s=Object(u.a)(l,2),d=s[0],p=s[1];N.getState();function b(){return(b=Object(i.a)(r.a.mark(function e(){var t;return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,D(n);case 2:t=e.sent,c(t);case 4:case\"end\":return e.stop()}},e)}))).apply(this,arguments)}function E(e){const t=function(e,t){let n=e.filter(e=>e._id!==t._id);return h(t),n}(n,e);c(t),p(t[0])}return Object(a.useEffect)(()=>{f().then(e=>{c(e),p(e[0])})},[]),o.a.createElement(\"div\",{className:\"wrapper\"},o.a.createElement(k,{items:n,onAdd:function(){return b.apply(this,arguments)},onSelect:function(e){p(e)},onDelete:E}),o.a.createElement(j,{active:d,onUpdateTask:function(e,t,a){const o=function(e,t,n,a){let o=Object(m.a)({},t);return void 0!==n&&(o.title=n),void 0!==a&&(o.body=a),e[e.findIndex(e=>e._id===o._id)]=o,v(o),[...e]}(n,e,t,a);p(o.find(t=>t._id===e._id)),c(o)},onComplete:function(e){const t=function(e,t){let n=Object(m.a)({},t);return n.status=\"completed\",e[e.findIndex(e=>e._id===n._id)]=n,v(n),[...e]}(n,e);c(t)},onDelete:E}))}const C=document.getElementById(\"root\");l.a.render(o.a.createElement(Provider,{store:N},o.a.createElement(g,null)),C)}},[[11,1,2]]]);","extractedComments":[]}